version: "3.8"
services:

    # PHP service
    php:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes:
          - ./:/var/www
        ports:
          - 8000:8000
        depends_on:
            - database
            - redis

    # Database service
    database:
        image: mysql:8.0
        ports:
          - 3306:3306
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USERNAME=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
        volumes:
          - db-data:/var/lib/mysql

    # Redis Service
    redis:
        image: redis:alpine
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
          - 6379:6379

    # Queue Service
    queue:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=queue
        working_dir: /var/www
        volumes:
          - ./:/var/www

    # Node service
    node:
        build:
            context: .
            target: node
        volumes:
          - .:/usr/src
          - ./node_modules:/usr/src/node_modules
        tty: true

    # App Service
    app:
        build: .
        entrypoint: /usr/local/bin/docker-php-entrypoint-dev
        command: ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisord.conf"]
        volumes:
            - ./:/var/www/app
        environment:
            - APP_ENV=local
            - APP_KEY=base64:tLmYfUrrZITzLIkSjFnV+PCAFxkdU+duUxjVSIlrrHo=
            - APP_DEBUG=true
            - DB_CONNECTION=mysql
            - DB_HOST=database ## same as the database service name
            - DB_PORT=3306
            - DB_DATABASE=ndana_db
            - DB_USERNAME=root
            - DB_PASSWORD=root
        restart: unless-stopped
        ports:
            - 8000:80
        depends_on:
            - database

volumes:
    db-data: ~
